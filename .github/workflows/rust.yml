name: Cargo Build & Test
on: [ push, pull_request ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [ stable, stable-vendor, beta, nightly, macos-x86_64, macos-aarch64, win64, win64-vendor, win-static, ubuntu-static ]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: stable-vendor
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            sundials: v7.0.0 v6.7.0 v6.6.2 v6.6.1 v6.6.0 v6.5.1 v6.5.0 v6.4.1 v6.4.0 v6.3.0 v6.2.0 v6.1.1 v6.1.0 v6.0.0
          - build: beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: macos-x86_64
            os: macos-12
            rust: stable
            target: x86_64-apple-darwin
          - build: macos-aarch64
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
          - build: win64
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: win64-vendor
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: win-static
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: ubuntu-static
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          # - build: windows-aarch64
          #   # No Windows arm64 workers at the moment.
          #   # https://github.com/actions/runner-images/issues/768
          #   os: windows-latest
          #   rust: stable
          #   target: aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@master
      - run: git submodule init
      - run: git submodule update
      - name: Set up vcpkg on Windows
        if: startsWith(matrix.os, 'windows') && ! contains(matrix.build, 'vendor') && matrix.build != 'win-static'
        run: |
          git clone https://github.com/microsoft/vcpkg
          & .\vcpkg\bootstrap-vcpkg.bat
          & .\vcpkg\vcpkg install sundials --triplet=x64-windows
      - name: Install Ubuntu packages
        if: startsWith(matrix.os, 'ubuntu') && ! contains(matrix.build, 'vendor')
        run: |
          sudo apt-get update && sudo apt-get -y install libsundials-dev
      - name: Install Rust (rustup)
        run: |
          rustup update --no-self-update
          rustup default ${{ matrix.rust }}-${{ matrix.target }}
      - run: cargo build
        if: matrix.build != 'win-static' && matrix.build != 'ubuntu-static'
      - run: cargo test --features cvodes,idas
        if: matrix.build != 'win-static' && matrix.build != 'ubuntu-static'
      - name: Test KLU
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install libsuitesparse-dev pkg-config
          cargo test --features klu
      - name: Test static libraries on Ubuntu
        if: matrix.build == 'ubuntu-static'
        run: cargo test --features "static_libraries,cvodes,idas"
      - name: Test static libraries on Windows
        if: matrix.build == 'win-static'
        run: cargo test --features "static_libraries,build_libraries,cvodes,idas"
      - name: List build directory
        if: matrix.build == 'win-static' && failure()
        run: |
          ls -R target/debug/build/sundials-sys-*/out
      - name: Test vendored build on Windows
        if: matrix.build == 'win64-vendor'
        run: cargo test --features "build_libraries,cvodes,idas"
      - name: Test various versions of Sundials
        if: matrix.build == 'stable-vendor'
        run: |
          cd vendor
          git fetch origin
          git reset --hard --quiet origin/main
          cd ..
          for v in ${{ matrix.sundials }}; do
            echo "▪▪▪ $v ▪▪▪"
            cd vendor
            git checkout $v
            cd ..
            cargo clean
            cargo test --features build_libraries,cvodes,idas
          done
